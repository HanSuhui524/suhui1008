'use strict';

const json=require('ekit.json')
const num=require('ekit.number')
const gradeLevels=num.grade.levels;
class Subjects extends Set{
    constructor(){
        super([
            {
                titles:'Language Arts,English,Writing,Reading,Spelling,Literature',
                title:'Language Arts',
                name:'language-arts',
                type:'subject'
            },
            {
                titles:'Math,Mathematics,Geometry,Algebra',
                title:'Math',
                name:'math',
                type:'subject'
            },
            {
                titles:'Science,Earth Science,Physical Science,Life Science,Chemistry,Physics,Biology,Geology,Space,Environment,Earth',
                title:'Science',
                name:'science',
                type:'subject'
            },
            {
                titles:'Social Studies,History,Government',
                title:'Social Studies',
                name:'social-studies',
                type:'subject'
            }
        ])
    }
    search(query){
        query=query+''
        query=query.trim().toLowerCase();
        var match;
        for(let o of this){
            let titles=o.titles.toLowerCase().trim().split(',')
            let filts = titles.filter((title)=>{
                if(title.indexOf(query) >= 0){return true;}
                else if(query.indexOf(title)>=0){return true;}
                else if(query === title.name){return true;}
                return false;
            })
            if(filts && filts.length){ match=filts[0]; }
            if(match) return match;
        }
        return match;
    }
}
module.exports={
    $connections:new Map(),
    $connect:function(key,connection){ this.$connections.set(key,connection); return true; },
    api:function(named){
        if(this.$connections.has(named)){return this.$connections.get(named);}
        return new Error('No api connected named '+named);
    },
    get apis(){return require('ekit.apis');},
    grade:function(value){return num.grade.make(value); },
    get grades(){ return gradeLevels; },
    get json(){return json;},
    get number(){return num},
    get states(){ return this.statics('states'); },
    get statics(){return require('ekit.static');},
    subjects:Subjects
}