let Router,postsCtrl,checkLoggedIn;_2c6‍.x([["default",()=>_2c6‍.o]]);_2c6‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_2c6‍.w("./posts.ctrl",[["*",null,function(v){postsCtrl=v}]]);_2c6‍.w("../../lib/checkLoggedIn",[["default",["checkLoggedIn"],function(v){checkLoggedIn=v}]]);




const posts = new Router();

posts.get('/', postsCtrl.list);
posts.post('/', checkLoggedIn,postsCtrl.write);

const post = new Router(); // /api/posts/:id
post.get('/', postsCtrl.read);
post.delete('/', checkLoggedIn, postsCtrl.checkOwnPost, postsCtrl.remove);
post.patch('/', checkLoggedIn, postsCtrl.checkOwnPost, postsCtrl.update);

posts.use('/:id', postsCtrl.getPostById, post.routes());

// 리팩토링 전
// posts.get('/', postsCtrl.list);
// posts.post('/', postsCtrl.write);
// posts.get('/:id', postsCtrl.checkObjectId.read);
// posts.delete('/:id', postsCtrl.checkObjectId.remove);
// posts.patch('/:id', postsCtrl.checkObjectId.update);

_2c6‍.d(posts);